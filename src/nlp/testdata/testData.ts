import { Statement, Connection } from "@/lib/schema";

// Clean-up network
export const statements: Statement[] = [
  {
    Id: "1",
    "Statement Type": "formal",
    Attribute: "insurers",
    Deontic: "must",
    Aim: "pay",
    "Direct Object": "property owner",
    "Type of Direct Object": "animate",
    "Indirect Object": "",
    "Type of Indirect Object": "",
    "Activation Condition": "if named storm and damage",
    "Execution Constraint": "",
    "Or Else": "",
  },
  {
    Id: "2",
    "Statement Type": "informal",
    Attribute: "Property owner",
    Deontic: "may",
    Aim: "sue",
    "Direct Object": "insurers",
    "Type of Direct Object": "animate",
    "Indirect Object": "",
    "Type of Indirect Object": "",
    "Activation Condition": "if named storm and damage and not paid out",
    "Execution Constraint": "",
    "Or Else": "",
  },
  {
    Id: "6",
    "Statement Type": "formal",
    Attribute: "VROMI minister",
    Deontic: "must",
    Aim: "order",
    "Direct Object": "Infrastructure Department",
    "Type of Direct Object": "animate",
    "Indirect Object": "",
    "Type of Indirect Object": "",
    "Activation Condition": "If necessary after storm",
    "Execution Constraint": "to execute clean up",
    "Or Else": "",
  },
  {
    Id: "7",
    "Statement Type": "formal",
    Attribute: "Emergency Response Team",
    Deontic: "must",
    Aim: "coordinate",
    "Direct Object": "evacuation efforts",
    "Type of Direct Object": "animate",
    "Indirect Object": "",
    "Type of Indirect Object": "",
    "Activation Condition": "",
    "Execution Constraint": "",
    "Or Else": "",
  },
  {
    Id: "8",
    "Statement Type": "formal",
    Attribute: "Local residents",
    Deontic: "may",
    Aim: "coordinate",
    "Direct Object": "community relief efforts",
    "Type of Direct Object": "inanimate",
    "Indirect Object": "",
    "Type of Indirect Object": "",
    "Activation Condition": "if Emergency Response Team coordinate evacuation",
    "Execution Constraint": "",
    "Or Else": "",
  },
  {
    Id: "10",
    "Statement Type": "formal",
    Attribute: "Ministry of Health",
    Deontic: "must",
    Aim: "provide",
    "Direct Object": "medical supplies",
    "Type of Direct Object": "inanimate",
    "Indirect Object": "to affected areas",
    "Type of Indirect Object": "animate",
    "Activation Condition": "",
    "Execution Constraint": "with assistance from Red Cross",
    "Or Else": "",
  },
  {
    Id: "11",
    "Statement Type": "informal",
    Attribute: "Red Cross",
    Deontic: "should",
    Aim: "provide",
    "Direct Object": "emergency services assistance",
    "Type of Direct Object": "inanimate",
    "Indirect Object": "to affected areas",
    "Type of Indirect Object": "",
    "Activation Condition": "when requested",
    "Execution Constraint": "",
    "Or Else": "or risk funding cuts",
  },
  {
    Id: "12",
    "Statement Type": "informal",
    Attribute: "Infrastructure department",
    Deontic: "must",
    Aim: "execute",
    "Direct Object": "clean up",
    "Type of Direct Object": "inanimate",
    "Indirect Object": "",
    "Type of Indirect Object": "",
    "Activation Condition": "If ordered by VROMI minister",
    "Execution Constraint": "",
    "Or Else": "",
  },
  {
    Id: "13",
    "Statement Type": "formal",
    Attribute: "Meteorological Department",
    Deontic: "must",
    Aim: "issue",
    "Direct Object": "storm warnings",
    "Type of Direct Object": "inanimate",
    "Indirect Object": "",
    "Type of Indirect Object": "",
    "Activation Condition": "",
    "Execution Constraint": "",
    "Or Else": "",
  },
  {
    Id: "14",
    "Statement Type": "formal",
    Attribute: "Public",
    Deontic: "must",
    Aim: "evacuate",
    "Direct Object": "coastal areas",
    "Type of Direct Object": "inanimate",
    "Indirect Object": "",
    "Type of Indirect Object": "",
    "Activation Condition": "if Meteorological Department issue storm warnings",
    "Execution Constraint": "",
    "Or Else": "",
  },
  {
    Id: "15",
    "Statement Type": "formal",
    Attribute: "Prime Minister",
    Deontic: "may",
    Aim: "declare",
    "Direct Object": "state of emergency",
    "Type of Direct Object": "inanimate",
    "Indirect Object": "",
    "Type of Indirect Object": "",
    "Activation Condition":
      "If informed by MET office and chief disaster coordinator",
    "Execution Constraint": "to raise risk awareness",
    "Or Else": "",
  },
  {
    Id: "16",
    "Statement Type": "formal",
    Attribute: "Building Inspectors",
    Deontic: "must",
    Aim: "assess",
    "Direct Object": "structural damage",
    "Type of Direct Object": "inanimate",
    "Indirect Object": "",
    "Type of Indirect Object": "",
    "Activation Condition": "",
    "Execution Constraint": "within 48 hours after storm",
    "Or Else": "",
  },
  {
    Id: "17",
    "Statement Type": "formal",
    Attribute: "Insurance Companies",
    Deontic: "must",
    Aim: "process",
    "Direct Object": "claims",
    "Type of Direct Object": "inanimate",
    "Indirect Object": "",
    "Type of Indirect Object": "",
    "Activation Condition":
      "after Building Inspectors assess within 48 hours after storm",
    "Execution Constraint": "",
    "Or Else": "",
  },
  {
    Id: "18",
    "Statement Type": "formal",
    Attribute: "Prime Minister",
    Deontic: "must",
    Aim: "inform",
    "Direct Object": "inhabitants",
    "Type of Direct Object": "inanimate",
    "Indirect Object": "",
    "Type of Indirect Object": "",
    "Activation Condition": "After declaring state of emergency",
    "Execution Constraint": "to raise risk awareness",
    "Or Else": "",
  },
] as const;

type NegationEntry = {
  word: string;
  sent: string;
};

type FuzzyMatchingEntry = {
  text1: string;
  text2: string;
};

export const fuzzyMatchingData: Record<string, FuzzyMatchingEntry[]> = {
  true: [
    {
      text1: "joint project with French side",
      text2: "joint ventures with French side",
    },
  ],
  false: [
    {
      text1: "joint project with French side",
      text2: "if requested by VROMI new projects dept.",
    },
    // {
    //   text1: "joint project with French side",
    //   text2: "if requested by the French side",
    // },
  ],
};

export const negationData: Record<string, NegationEntry[]> = {
  true: [
    {
      word: "pay",
      sent: "The service remains unpaid",
    },
    {
      word: "pay",
      sent: "if named storm and damage and not paid out",
    },
    {
      word: "request",
      sent: "This is not a request",
    },
    {
      word: "not pay",
      sent: "It should be paid",
    },
    {
      word: "not request",
      sent: "It should request from workers",
    },
  ],
  false: [
    {
      word: "request",
      sent: "This is a request for work",
    },
    {
      word: "pay",
      sent: "The service is paid",
    },
  ],
};

export const mockStatements: Statement[] = [
  {
    Id: "1",
    "Statement Type": "formal",
    Attribute: "VROMI minister",
    Deontic: "must",
    Aim: "order",
    "Direct Object": "infrastructure dept to execute clean-up",
    "Type of Direct Object": "animate",
    "Indirect Object": "",
    "Type of Indirect Object": "",
    "Activation Condition": "if necessary after a storm event",
    "Execution Constraint": "",
    "Or Else": "",
  },
  {
    Id: "2",
    "Statement Type": "informal",
    Attribute: "Governor",
    Deontic: "",
    Aim: "requests",
    "Direct Object": "financial aid",
    "Type of Direct Object": "inanimate",
    "Indirect Object": "from Dutch Kingdom",
    "Type of Indirect Object": "animate",
    "Activation Condition": "if requested by Prime minister",
    "Execution Constraint": "",
    "Or Else": "",
  },
  {
    Id: "3",
    "Statement Type": "formal",
    Attribute: "Property owners",
    Deontic: "must",
    Aim: "insure",
    "Direct Object": "their properties",
    "Type of Direct Object": "inanimate",
    "Indirect Object": "",
    "Type of Indirect Object": "",
    "Activation Condition": "",
    "Execution Constraint": "",
    "Or Else": "",
  },
  {
    Id: "4",
    "Statement Type": "informal",
    Attribute: "NGOs",
    Deontic: "",
    Aim: "help",
    "Direct Object": "",
    "Type of Direct Object": "",
    "Indirect Object": "",
    "Type of Indirect Object": "",
    "Activation Condition": "if requested by inhabitants",
    "Execution Constraint": "in reconstruction",
    "Or Else": "",
  },
  {
    Id: "5",
    "Statement Type": "formal",
    Attribute: "VROMI infrastructure dept.",
    Deontic: "must",
    Aim: "clean",
    "Direct Object": "gutters",
    "Type of Direct Object": "inanimate",
    "Indirect Object": "",
    "Type of Indirect Object": "",
    "Activation Condition": "",
    "Execution Constraint": "before June (start hurricane season)",
    "Or Else": "",
  },
  {
    Id: "6",
    "Statement Type": "formal",
    Attribute: "ACER",
    Deontic: "must",
    Aim: "update",
    "Direct Object": "the recommendations",
    "Type of Direct Object": "inanimate",
    "Indirect Object": "",
    "Type of Indirect Object": "",
    "Activation Condition": "",
    "Execution Constraint": "at least once every two years",
    "Or Else": "",
  },
] as const;

export const actorConnections: Connection[] = [
  {
    driven_by: "actor",
    source_component: "Direct Object",
    source_statement: "6",
    target_component: "Attribute",
    target_statement: "12",
  },
  {
    driven_by: "actor",
    source_component: "Direct Object",
    source_statement: "7",
    target_component: "Attribute",
    target_statement: "8",
  },
  {
    driven_by: "actor",
    source_component: "Indirect Object",
    source_statement: "10",
    target_component: "Attribute",
    target_statement: "11",
  },
] as const;

export const outcomeConnections: Connection[] = [
  {
    driven_by: "outcome",
    source_component: "Direct Object",
    source_statement: "13",
    target_component: "Activation Condition",
    target_statement: "14",
  },
  {
    driven_by: "outcome",
    source_component: "Execution Constraint",
    source_statement: "16",
    target_component: "Activation Condition",
    target_statement: "17",
  },
  {
    driven_by: "outcome",
    source_component: "Direct Object",
    source_statement: "15",
    target_component: "Activation Condition",
    target_statement: "18",
  },
] as const;

export const sanctionConnections: Connection[] = [
  {
    driven_by: "sanction",
    source_component: "Aim",
    source_statement: "1",
    target_component: "Activation Condition",
    target_statement: "2",
  },
] as const;
